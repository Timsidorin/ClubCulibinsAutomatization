version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/ssl:/etc/nginx/ssl
    depends_on:
      - server
      - client
      - info_bot
    restart: unless-stopped
    networks:
      - backend

  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - "3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - "8002"
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - backend

  info_bot:  # âœ… Fixed: Properly indented under services
    build:
      context: .                  
      dockerfile: ./info_bot/Dockerfile
    env_file:
      - .env
    expose:
      - "8001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend

  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_USER: "${DATABASE_USERNAME}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
