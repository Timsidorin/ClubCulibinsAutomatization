worker_processes auto;
worker_rlimit_nofile 65535;      # больше файловых дескрипторов

events {
    worker_connections 2048;     # удвоили лимит
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    ## Сетевые оптимизации
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    ## Сжатие
    gzip  on;
    gzip_comp_level 5;
    gzip_min_length 512;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss image/svg+xml;

    ## «Быстрые» тайм-ауты
    keepalive_timeout        20;   # было 75 по умолчанию
    keepalive_requests       100;
    client_header_timeout    10;
    client_body_timeout      10;
    send_timeout             10;

    ## Буферы
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    client_body_buffer_size 16k;
    client_max_body_size 8m;       # если нужно больше – увеличьте

    ## Логи
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;

    ## Upstream-ы c keep-alive
    upstream client     { server client:8002;  keepalive 16; }
    upstream api_server { server server:3000;  keepalive 16; }
    upstream info_bot   { server info_bot:8001; keepalive 8; }

    ## HTTP → HTTPS
    server {
        listen 80;
        server_name 147.45.146.30;
        return 301 https://$host$request_uri;
    }

    ## HTTPS
    server {
        listen 443 ssl http2;
        server_name 147.45.146.30;
        resolver 127.0.0.11 valid=30s;
        ssl_certificate     /etc/nginx/ssl/certs/webapp.crt;
        ssl_certificate_key /etc/nginx/ssl/private/webapp.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;

        ### Telegram-webhook
        location /webhook {
            proxy_pass http://client/webhook;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type      application/json;
            proxy_http_version 1.1;
            proxy_read_timeout   30;
            proxy_send_timeout   30;
            proxy_connect_timeout 15;
        }

        ### Info-bot
        location /notifications/ {
            proxy_pass http://info_bot/;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_read_timeout   45;
            proxy_send_timeout   45;
            proxy_connect_timeout 15;
        }

        ### REST API
        location /api/ {
            # Проверяем, что запрос пришел с вашего фронтенда
            if ($http_referer !~* ^https://147\.45\.146\.30/) {
                return 403;
            }

            # CORS (если фронтенд делает fetch/AJAX)
            add_header 'Access-Control-Allow-Origin' 'https://147.45.146.30' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # Проксирование на API
            proxy_pass http://api_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
        }

        ### Front-end (SPA)
        location / {
            proxy_pass http://client;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        "upgrade";
            proxy_http_version 1.1;
            proxy_read_timeout   30;
            proxy_send_timeout   30;
            proxy_connect_timeout 10;
        }
    }
}
